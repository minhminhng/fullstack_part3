{"version":3,"sources":["components/Filter.js","components/Personform.js","services/persons.js","components/Persons.js","components/notification.js","App.js","index.js"],"names":["Filter","props","onChange","filterName","value","handleFilterChange","PersonForm","onSubmit","name","handleNameChange","number","handleNumberChange","type","text","baseUrl","axios","get","then","response","data","personObj","post","id","console","log","delete","put","Person","onDelete","label","onClick","Persons","persons","setPersons","setMsg","msg","map","person","remainedPersons","filter","p","find","window","confirm","personService","setTimeout","catch","error","deletePerson","Notification","message","className","App","useState","newName","setNewName","newNumber","setNewNumber","newFilter","setFilter","showAll","setShowAll","useEffect","initialPersons","personsToShow","toLocaleLowerCase","includes","event","test","target","preventDefault","index","findIndex","toLowerCase","updatedPerson","newList","addedPerson","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76b26e9d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ( props ) => {\r\n    return (\r\n    <form onChange={props.filterName}>\r\n        <div>\r\n          filter shown with <input value={props.value} onChange={props.handleFilterChange} />\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n      <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          name: <input value={props.name} onChange={props.handleNameChange}/>\r\n          <br />\r\n          number: <input value={props.number} onChange={props.handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">{props.text}</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\n\r\n//const baseUrl = 'http://localhost:3001/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst addPerson = personObj => {\r\n    const request = axios.post(baseUrl, personObj)\r\n\t// console.log('addPerson', personObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    console.log(`deleting ${baseUrl}/${id}...`)\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, personObj) => {\r\n    console.log('updating')\r\n    const request = axios.put(`${baseUrl}/${id}`, personObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    addPerson,\r\n    deletePerson,\r\n    update\r\n}","import React from 'react'\r\nimport personService from '../services/persons'\r\n\r\n// Person name component\r\nconst Person = ( {name, number, onDelete, label} ) => {\r\n\r\n  return (\r\n    <tr>\r\n      <td>{name}</td><td>{number}</td>\r\n      <td><button onClick={onDelete}>{label}</button></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\n// List of persons\r\nconst Persons = ( {persons, setPersons, msg, setMsg} ) => {\r\n    const deletePerson = (id) => {\r\n      const remainedPersons = persons.filter(p => p.id !== id)\r\n      const person = persons.find(p => p.id === id)\r\n      const result = window.confirm(`Delete ${person.name}?`)      \r\n      if (result) {\r\n        personService\r\n          .deletePerson(id)\r\n          .then(response => {\r\n            setMsg([0,`Deleted ${person.name} from the list`])\r\n            setTimeout(() => {\r\n              setMsg(null)\r\n            }, 3000)\r\n          })\r\n          .catch(error => {\r\n            setMsg([1,`${person.name} no longer exists`])\r\n            setTimeout(() => {\r\n              setMsg(null)\r\n            }, 3000)\r\n          })\r\n        setPersons(remainedPersons)        \r\n      }\r\n    }\r\n    \r\n    return (\r\n    <table>\r\n        <tbody>          \r\n          {persons.map(person =>\r\n            <Person key={person.id} name={person.name} number={person.number} \r\n              onDelete={() =>deletePerson(person.id)} label=\"delete\"/>\r\n          )}          \r\n        </tbody>\r\n    </table>)\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    if (message[0] === 0){\r\n        return (\r\n            <div className=\"message\">\r\n                {message[1]}\r\n            </div>\r\n        )\r\n    }\r\n    else if (message[0] === 1){\r\n        return (\r\n            <div className=\"error\">\r\n                {message[1]}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/Personform'\r\nimport Persons from './components/Persons'\r\nimport personService from './services/persons'\r\nimport Notification from './components/notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])   \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setFilter ] = useState('')\r\n  const [ showAll, setShowAll ] = useState(true)\r\n  const [ msg, setMsg ] = useState(null)\r\n\r\n  /// Fetching data\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  /// Adding a new person to the database list\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const index = persons.findIndex(p => p.name.toLowerCase() === newName.toLocaleLowerCase())\r\n    if (!/\\S/.test(newName)) {\r\n      // If text field is empty\r\n      window.alert('Please add a name') \r\n    } \r\n    else if (!/\\S/.test(newNumber)){\r\n      // If text field is empty\r\n      window.alert('Please add a phone number') \r\n    } \r\n    else if (index !== -1) {\r\n      const result = window.confirm(`${persons[index].name} is already added to phonebook, replace the old number with a new one?`)\r\n      if (result) {\r\n        const personObj = {\r\n          name: persons[index].name,\r\n          number: newNumber\r\n        }\r\n        personService\r\n          .update(persons[index].id, personObj)\r\n          .then(updatedPerson => {            \r\n            let newList = [...persons]\r\n            newList[index] = {...newList[index], number: updatedPerson.number}\r\n            setPersons(newList)\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setMsg([0, `Updated phone number for ${updatedPerson.name}`])\r\n            setTimeout(() => {\r\n              setMsg(null)\r\n            }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setMsg([1,`${persons[index].name} no longer exists`])\r\n            setTimeout(() => {\r\n              setMsg(null)\r\n            }, 3000)\r\n          }) \r\n      }\r\n      else {\r\n        setNewName('')\r\n        setNewNumber('')\r\n      }\r\n    }\r\n    else{\r\n      const personObj = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      personService\r\n        .addPerson(personObj)\r\n        .then(addedPerson => {\r\n\t\t      // console.log(addedPerson)\r\n          console.log('name', addedPerson.name)\r\n          setPersons(persons.concat(addedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setMsg([0,`Added ${addedPerson.name} to the list`])\r\n          setTimeout(() => {\r\n            setMsg(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data)\r\n          setMsg([1, `${error.response.data.error}`])\r\n          setTimeout(() => {\r\n            setMsg(null)\r\n          }, 5000)\r\n        })\r\n    }    \r\n  }\r\n\r\n  // Handler when name field changed\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n    const index = persons.findIndex(p => p.name.toLocaleLowerCase() == newName.toLocaleLowerCase())\r\n  }\r\n  \r\n  /// Handler when number field changed\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const filterName = (event) => {\r\n    if (/\\S/.test(newFilter)) {\r\n      setShowAll(false)\r\n    } \r\n    else {\r\n      setShowAll(true)\r\n    }\r\n  }\r\n  ///Handle filter value changed\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)          \r\n  }\r\n\r\n  const personsToShow = showAll \r\n  ? persons \r\n  : persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLocaleLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={msg} />\r\n      <Filter filterName={filterName} value={newFilter} handleFilterChange={handleFilterChange} />\r\n      <h3>Add a new</h3>\r\n      \r\n      <PersonForm text=\"add\" onSubmit={addPerson} name={newName} number={newNumber} \r\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\r\n      \r\n      <h3>Numbers</h3>\r\n      <Persons persons={personsToShow} setPersons={setPersons} msg={msg} setMsg={setMsg}/>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,\r\n      document.getElementById('root'))\r\n"],"sourceRoot":""}